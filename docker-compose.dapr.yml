services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./dapr/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmqdata:/var/lib/rabbitmq/
      - rabbitmqlog:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 5

  resource-manager:
    image: resource-manager
    container_name: resource-manager
    build:
      context: .
      dockerfile: src/ResourceManager/Dockerfile
    ports:
      - "5000:5000"
      - "50001:50001"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      placement:
        condition: service_started

  resource-manager-dapr:
    image: "daprio/daprd"
    container_name: resource-manager-dapr
    network_mode: "service:resource-manager"
    depends_on:
      - resource-manager
    command: ["./daprd",
      "-app-id", "resource-manager",
      "-app-port", "5000",
      "-log-level", "warn",
      "-actors-service", "placement:50006",
      "-resources-path", "/components"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/secrets/:/secrets"

  aws-agent:
    image: aws-agent
    container_name: aws-agent
    build:
      context: .
      dockerfile: src/AwsAgent/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      placement:
        condition: service_started
    ports:
      - "5001:5000"
      - "50002:50001"
    environment:
      - SERVICEOPTION__WORKERINTERVAL=5

  aws-agent-dapr:
    image: "daprio/daprd"
    container_name: aws-agent-dapr
    network_mode: "service:aws-agent"
    depends_on:
      - aws-agent
    command: ["./daprd",
      "-app-id", "aws-agent",
      "-app-port", "5000",
      "-log-level", "warn",
      "-actors-service", "placement:50006",
      "-resources-path", "/components"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/secrets/:/secrets"

  placement:
    container_name: placement
    image: "daprio/dapr"
    command: ["./placement",
      "-log-level", "warn",
      "-port", "50006"
      ]
    ports:
      - "50006:50006"
      
networks:
  default:
    name: dapr-network

volumes:
  rabbitmqdata:
  rabbitmqlog: