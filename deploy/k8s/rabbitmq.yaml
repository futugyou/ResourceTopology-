apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
type: Opaque
data:
  RABBITMQ_DEFAULT_USER: dXNlcg==  # echo -n 'user' | base64 
  RABBITMQ_DEFAULT_PASS: cGFzc3dvcmQ=  # echo -n 'password' | base64

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
  clusterIP: None # StatefulSet çš„ Headless Service
  selector:
    app: rabbitmq

---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  name: rabbitmq-config
  labels:
    service: rabbitmq
data:
  rabbitmq.conf: |+
    log.console = true
    log.syslog = true

    log.console.level = warning
    log.syslog.level = warning

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:management-alpine
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS
          volumeMounts:
            - name: config-volume
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-log
              mountPath: /var/log/rabbitmq
          readinessProbe:
            exec:
              command: ["rabbitmqctl", "status"]
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 30
      restartPolicy: Always
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
        - name: rabbitmq-log
          persistentVolumeClaim:
            claimName: rabbitmq-log

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: rabbitmq-data
  name: rabbitmq-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: rabbitmq-log
  name: rabbitmq-log
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-ui
  namespace: default
  labels:
    app: rabbitmq
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: management
      port: 15672
      targetPort: 15672

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: rabbitmq-ui
  namespace: default
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/rabbitmq-ui`)
      kind: Rule
      services:
        - name: rabbitmq-ui
          port: 15672
